userfullstate,
I chose this name before the REST talk

Renamed folder from javacodegeeks_cassandracouserfullstatennect


29 April 2015

Make sure you read this. (Especially customising the port of the endpoint)
https://spring.io/guides/gs/actuator-service/
Wed Apr 29 14:08:32 BST 2015

Also this:
https://spring.io/guides/gs/accessing-data-rest/

spring curl boot get
https://spring.io/guides/gs/accessing-data-rest/


curl GET attempts failed

git done

____________________________________
commandline WORKED!
17:40 pm
29 April 2015

folders are important:
moved filed into folder java  (src/main/java)
(also: resources:   src/main/resources )

specified the main (removed the laternative main)
then:
mvn clean install
then
java -jar gs-spring-boot-0.1-SNAPSHOT.jar

src/main/java
mvn clean install
java -jar gs-spring-boot-0.1-SNAPSHOT.jar


how to run commandline:
mvn clean install
java -jar target/gs-spring-boot-0.1-SNAPSHOT.jar


todo: junit
ver = 4.12
<scope>  = ?


GET could not sen a "long" variable.
However curl url?uid=2   was fine with String.

In fact the GET method was working correctly.
30 April 2015
13:44
    //A 'json' is the set of public get*() methods of a POJO.
From stack overflow [David Lotts]: "make sure the POJO you return has get()ers, one for each field."


GET does not work with json input.

Long works (instead of long) in GET.

TODO:
Need to learn:  @PathVariable versus @RequestParam
TODO:
@RequestMapping(method=GET, value={"aa","aa/{id}"})
What does this mean?
TODO:
also a usage: curl  -H "acceptjson..."   "localhost:8080/a/b/getName{a,b}"
___________

We can have (Model model) as the parameters for the "controller" function.

16:18
@RequestMapping(method = RequestMethod.GET)
//Just narrows the http operations! (GET,PUT,POST)
Wrong! This is needed (*). Otherwise:  {"timestamp":1430407860455,"status":404,"error":"Not Found","message":"No message available","path":"/userfullstate"}
*: When I use @RequestMapping(url) for the class, and not the function. Otherwise, the the URL is not matches to the Function.

@RequestMapping("/userfullstate")
can be wither for a function or a class.

is
@ResponseBody
optional?  (for the function)

Model:
"Primarily designed for adding attributes to the model."

But the object is different each time.
Besides, where is it constructed? Using what parameters?


@NotNull
@Size(max=100)


# MVC
spring.view.prefix=/WEB-INF/jsp/
spring.view.suffix=.jsp

#So will be stored in src/main/webapp/WEB-INF/jsp
#ref url=?


? May 2015
----------
Use Long as argument

9 May 2015
----------
Model can be provided as an arg or as a member of 
A model as an arg is constructed at each REST request. (then what is the point?)
Why??? #Q #unresolved

A this.model (in the controller class) is created once. Appears quite early in logs.

Which one is injection then?


@RequestMapping(method = RequestMethod.GET)
public @ResponseBody UserStateSummaryView method_name_does_not_matter
    (
            @RequestParam(value="uid", required=true)       Long uid
            ,
            UserState tempmodel  //Constructed each time. Then what's the point? #Q
    )
    {...}


?
    @Resource
    /*
    Using "@Resource" by itself (without another bean) causes:
        Injection of resource dependencies failed;
        No qualifying bean of type [sboot.UserState] found for dependency:
        expected at least 1 bean which qualifies as autowire candidate
        for this dependency.
        Dependency annotations:
        {@javax.annotation.Resource(
           shareable=true, mappedName=, description=, name=, type=class java.lang.Object, lookup=, authenticationType=CONTAINER
           )}
     Solutions: To make the Bean using:
     1-Make a @Configuration class. (very flexible and customisable) (Uses @Bean in a method)
     2-define @Component when defining the class (1 instance only).
     */
    GameInstance model1; //Todo: rename to GameState


11 May 2015:
------------
`@Service` is a subtype of @Component
@Service: "Service", originally defined by Domain-Driven
           * Design (Evans, 2003) as "an operation offered as an interface that stands alone in the
           * model, with no encapsulated state." []

`@Controller`
is typically used in combination with annotated handler methods based on the
 * {@link org.springframework.web.bind.annotation.RequestMapping} annotation.

`java -ea` enables assert
mvn clean install ;blines ;java -ea -jar target/gs-spring-boot-0.1-SNAPSHOT.jar

Works. 16:25 (compiles without error)
Both @Value and @Bean are required.
Q: How to make a Bean that is Injected in properties of two @Components?

echo;curl localhost:8080/userfullstate?uid=2;echo;echo     #exception
echo;curl localhost:8080/userfullstate?uid=7;echo;echo     #works fine. cool.
echo;curl localhost:8080/gamestate;echo;echo               #empty output


Is UserState a Bean? Or is it part of the GameInstance (getter)

UserState is probably Not a bean. [DesignDecision]

Works!
$ echo;curl localhost:8080/gamestate;echo;echo

{"players":[{"publicName":"Jack","summary":{"summary":"Name:Jack OnApp: false","vlong":5},"privateName":"Jack","onScreen":false}],"playerCount":1}


this.gameinstance= sboot.GameInstance@3e94b979

The getters provide all needed (also the summary and the view).
is* is a getter.
How to define an int (primitive type) getter?


12 May 2015
Specs and Concepts:
    Every spec must contain one or more scenarios. []
    Every spec can be marked with labels using tags. []
    Every scenario has multiple steps.
    [http://getgauge.io/documentation/user/current/specifications/scenarios.html]

Specifications are business layer test cases which can also act as your feature documentation.
    [http://getgauge.io/documentation/user/current/specifications/README.html]


going for : Mail


On @Bean methods:
A @Bean (method) will be executed once even if called multiple times. (Any @Bean in a @Configuration)
If a @BEan in @Component class, it will be called 3 times ( N+1 times)!

parameters of @Bean methods: are injected.(?)

alternatives to singleton @Beans: sessions scope, request scope.

* A controller should not be void?
I only used a @RequestMapping(...) without @ResponseBody

> Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Circular view path [choose]: would dispatch back to the current handler URL [/choose] again. Check your ViewResolver setup!
> (Hint: This may be the result of an unspecified view, due to default view name generation.)
> ] with root cause

@ResponseBody:
Annotation that indicates a method return value should be bound to the web response body.
.. * added on "type level" vs. added on the "method level".
** @see RequestBody
** @see RestController

@RestController = a @Controller class where @RequestMapping  methods => @ResponseBody
But is "/choose" a REST Controller?

Works!
>$ curl localhost:8080/choose?uid=7\&choice=1
> 2015-05-12 17:18:20.689  INFO 21077 --- [nio-8080-exec-5] s.e.ChooseOnPushButtonController         : User '7' chose 1

The method's return type is "@ResponseBody void"

todo: set the timestamp of last change when "/choose".

@ResponseBody void

git:commit summary:
"the /choose endpoint added and works, java mail sender imported but not used. @ResponseBody void is type annotation. It is required for the endpoint. But is it REST?"


Who sets the timestamp (for the vote/choice)? When is it set?
At frontend? the caller of the rest? The REST method?
How many timestamps should we save?
How many timestamps can exist (in total)?

Port changed:
mvn clean install ;blines ;java -ea -jar target/gs-spring-boot-0.1-SNAPSHOT.jar --server.port=8181 &

Works!
$ curl localhost:8181/choose?uid=7\&choice=7
2015-05-13 13:35:45.876  INFO 28969 --- [nio-8181-exec-5] s.e.ChooseOnPushButtonController         : User '7' chose 7 at 2015-05-13T13:35:45.876


    private ZonedDateTime lastTimeSet_REST;
    private ZonedDateTime lastTimeSet_THIS; //Here, at the UserState object setter
    //private ZonedDateTime lastTimeSet_FRONTEND;
    //private ZonedDateTime lastTimeSet_RECEIVED_FROM_SERVER;
    //private ZonedDateTime lastTimeSet_RECEIVED_FROM_WEBSOCKETS;

this.lastTimeSet_HERE.getChronology() = ?


> The @Resource annotation marks a resource that is needed by the application.

A bean can be injected twice.
But a POJO (that ias not a @Component) cannot use @Property field (if uses, it is not injected).


Security is done by this:
    @Configuration
    @EnableWebMvcSecurity
    public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

Requires an LDAP server: ApacheDS
The ldapAuthentication() method configures (also logs in?)

LDIF = LDIF (LDAP Data Interchange Format)
We put an *ldif file in resources.
Using LDIF is not for production.

Error:
2015-05-13 20:17:14.146 ERROR 5406 --- [ost-startStop-1] o.a.d.s.s.r.DefaultAttributeTypeRegistry : attributeType w/ OID 2.5.4.16 not registered!

This page says just ignore this error:
> DefaultAttributeTypeRegistry : attributeType w/ OID 2.5.4.16 not registered!
https://github.com/bsnyder/spring-security-demo/blob/master/README.md
also:
NormalizationInterceptor     : The RDN 'cn=quote\"guy' is not present in the entry

todo: learn about LDAP
LDAP = Lightweight Directory Access Protocol
a layer above the TCP/IP stack.

* https://msdn.microsoft.com/en-us/library/aa367008%28v=vs.85%29.aspx
* ...


Apache Directory Server
http://en.wikipedia.org/wiki/Apache_Directory

LDIF editor
DSML editor

Security ldif error.
I also suspect the version specified ni the in POM

* Tests (Class with *Test suffix) should be in the folder ./src/test/java . This is imposed by Maven and of course setting the test folder by IntellijIdea doesnt matter.

15 May 2015
Security now works:
Based on two things:
http://docs.spring.io/autorepo/docs/spring-security/3.2.0.RELEASE/apidocs/org/springframework/security/config/annotation/web/configuration/EnableWebSecurity.html
( g: @EnableWebSecurity )
and:
https://github.com/spring-guides/gs-securing-web



todo: Difererntiate: SSL, SSH, OAuth, etc
todo: OAuth

Just adding <artifactId>spring-boot-starter-security</artifactId> to maven enables security.
Without the configuration class, (but using the artifact/dependency,) a dialogue box appears. Using configuration, a form appears.

kill  -SIGCONT 6549

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy MM dd");
  String text = date.toString(formatter);


19 May 2015
            mthd(Map<String, Object> model) {}
            //Understanding:
            //   the model is actually an output. It constitutes the "request" (GET/POST) to the page x, where String x is returned.
Question: Is that request a POST or a GET then?

Using import org.springframework.ui.Model;
did not help.


For test:
1- Make sure you use the right dependency.
     The package needed is spring-boot-starter-test and NOT spring-test and NOT junit.
     static imports. org.hamcrest.Matchers.equalTo ,etc   equalTo, content, status. These are methods directly imported!
2- Make sure you instantiate the right class (HomePageController).
3- No need to worry about security. the simple Test works directly with the POJOs.

Simple (Unit) test now works ( https://spring.io/guides/gs/spring-boot/ )

How to skip tests:
mvn -DskipTests=true clean install

Q:
How to set username password.
Why setting manually doesnt work (session).
What is a default security password.

Spring will not remain.

Now AngularJS works.

21:17 pm  (19 May 2015)
Next steps:
__________________________________________
Todo:
relate that user to the login one
store previous choices
graph
email
test (damn)
Use Filters : rest-service-cors example.  CORS: https://spring.io/guides/gs/rest-service-cors/
rename homapage to About page.
public ip (domain independent , port independent)
push button SENDs information. (Angular JS)
(page redirects: systematic. No empty page.)
(getting notified: requesting from server to Client's browser)
(session: [based on page1/html] which knows which uid it is. should I add uid to the json object of UserState? try to resist.)
A simple skin.
______________________________________________

21 May 2015
Let's apply this:
https://spring.io/blog/2015/01/12/spring-and-angular-js-a-secure-single-page-application

todo:  [In AnguarJS] Don't use Controllers. Just use directives instead.
http://teropa.info/blog/2014/10/24/how-ive-improved-my-angular-apps-by-banning-ng-controller.html
